@inject Microsoft.Extensions.Localization.IStringLocalizer<NavMenu> _localizer
@using System.Security.Claims

<UserCard />
<MudNavMenu>
    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">@_localizer["Home"]</MudNavLink>
  
    
    @*<MudListSubheader Class="mt-2 mb-n2">@_localizer["Personal"]</MudListSubheader>*@
    @if (_canViewDashboards)
    {
       
        <MudNavLink Href="/dashboard" Icon="@Icons.Material.Outlined.Dashboard">
            @_localizer["Dashboard"]
        </MudNavLink>
        <MudNavLink Href="/dashboard" Icon="@Icons.Material.Outlined.Folder">
            @_localizer["Dépôt"]
        </MudNavLink>
        <MudNavLink Href="/dashboard" Icon="@Icons.Material.Outlined.Map">
            @_localizer["Plan parcellaire"]
        </MudNavLink>
    }
    @*<MudNavLink Href="/account" Icon="@Icons.Material.Outlined.SupervisorAccount">
        @_localizer["Account"]
    </MudNavLink>*@
    
    @if (_canViewDocuments || _canViewDocumentTypes)
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Document Management"]</MudListSubheader>
        @if (_canViewDocuments)
        {
            <MudNavLink Href="/mydocument-store" Icon="@Icons.Material.Outlined.AttachFile">
                @_localizer["My Document Store"]
            </MudNavLink>
        }
        @if (_canViewDocumentTypes)
        { 
            <MudNavLink Href="/document-store" Icon="@Icons.Material.Outlined.AttachFile">
                @_localizer["Document Store"]
            </MudNavLink>
            <MudNavLink Href="/document-types" Icon="@Icons.Material.Outlined.FileCopy">
                @_localizer["Document Types"]
            </MudNavLink>
        }
    }

     <MudListSubheader Class="mt-2 mb-n2">Création de titre foncier</MudListSubheader>
       
            <MudNavLink Href="#" Icon="@Icons.Material.Filled.Assignment">
                Immatriculation
            </MudNavLink>
         
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.VerticalSplit">
                Morcellement / Démembrement
            </MudNavLink>
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.MergeType">
                Fusion
            </MudNavLink>

      <MudListSubheader Class="mt-2 mb-n2">Mise-à-jour de titre foncier (TF)</MudListSubheader>
       
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.LooksTwo">
                Duplicata
            </MudNavLink>
         
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.Refresh">
                Actualisation de TF
            </MudNavLink>
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.RestoreFromTrash">
                Rectification de TF
            </MudNavLink>
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.DevicesOther">
                Autres opérations post-immatriculation
            </MudNavLink>

      <MudListSubheader Class="mt-2 mb-n2">Opérations diverses</MudListSubheader>
       
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.Explore">
                Expertises foncières
            </MudNavLink>
         
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.CardGiftcard">
                Plan cadastral
            </MudNavLink>
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.Info">
                Renseignements
            </MudNavLink>
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.Anchor">
                Opposition
            </MudNavLink>
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.Analytics">
                Evaluation cadastrale
            </MudNavLink>
            <MudNavLink Href="#" Icon="@Icons.Material.Outlined.RuleFolder">
                Récapitulatifs de dossiers
            </MudNavLink>
        

    @if (_canViewUsers || _canViewRoles)
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Administrator"]</MudListSubheader>
        @if (_canViewUsers)
        {
            <MudNavLink Href="/identity/users" Icon="@Icons.Material.Outlined.Person">
                @_localizer["Users"]
            </MudNavLink>
        }
        <MudNavLink Href="/swagger/index.html" Target="_blank" Icon="@Icons.Material.Outlined.LiveHelp">
        @_localizer["Swagger"]
        </MudNavLink>
        @if (_canViewRoles)
        {
            <MudNavLink Href="/identity/roles" Icon="@Icons.Material.Outlined.Person">@_localizer["Roles"]</MudNavLink>
        }
        @if (_canViewAuditTrails)
    {
        <MudNavLink Href="/audit-trails" Icon="@Icons.Material.Outlined.Security">
            @_localizer["Audit Trails"]
        </MudNavLink>
    }
    }
    @if (_canViewChat)
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Communication"]</MudListSubheader>
        <MudNavLink Href="/chat" Icon="@Icons.Material.Outlined.Chat">
            @_localizer["Chat"]
        </MudNavLink>
    }
   
</MudNavMenu>

@code {
    private ClaimsPrincipal _authenticationStateProviderUser;

    private bool _canViewHangfire;
    private bool _canViewDashboards;
    private bool _canViewDocuments;
    private bool _canViewDocumentTypes;
    private bool _canViewAuditTrails;
    private bool _canViewRoles;
    private bool _canViewUsers;
    private bool _canViewChat;
    private bool _canViewProducts;
    private bool _canViewBrands;

    protected override async Task OnParametersSetAsync()
    {
        _authenticationStateProviderUser = await _stateProvider.GetAuthenticationStateProviderUserAsync();
        _canViewHangfire = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Hangfire.View)).Succeeded;
        _canViewDashboards = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Dashboards.View)).Succeeded;
        _canViewDocuments = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Documents.View)).Succeeded;
        _canViewDocumentTypes = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.DocumentTypes.View)).Succeeded;
        _canViewAuditTrails = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.AuditTrails.View)).Succeeded;
        _canViewRoles = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Roles.View)).Succeeded;
        _canViewUsers = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Users.View)).Succeeded;
        _canViewChat = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Communication.Chat)).Succeeded;
         }
}